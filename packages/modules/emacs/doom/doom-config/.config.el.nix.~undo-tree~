(undo-tree-save-format-version . 1)
"2e936e725e9f7faf041e1df77c67e3f441f2f73c"
[nil nil nil nil (25145 60238 336842 0) 0 nil]
([nil nil ((3126 . 3134) ("r" . -3126) ("u" . -3127) 3128 (3126 . 3128) (t 25127 53495 580152 313000)) nil (25145 60238 336841 0) 0 nil])
([nil nil (("ev" . 1533) (1535 . 1539) ("ev" . 1425) (1427 . 1431) ("ev" . 1317) (1319 . 1323) ("ev" . 1208) (1210 . 1214) ("ev" . 1099) (1101 . 1105) ("ev" . 990) (992 . 996) ("ev" . 884) (t 25127 53726 642322 152000) (886 . 890) (t 25127 53726 642322 152000)) nil (25145 60238 336838 0) 0 nil])
([nil nil ((2735 . 2737) ("(" . -2735) ("
     )" . 2736) (")" . -2736) 2737 (")" . 2737) (2736 . 2737) (2735 . 2737) ("(" . -2735) (2735 . 2736) ("        :desc \"Decrease window height\" \"C--\" #'evil-window-decrease-height)
" . 2736) (t 25127 53752 972486 534000)) nil (25145 60238 336833 0) 0 nil])
([nil nil (("        :desc \"Move to right window\" \"l\" #'(lambda () (interactive) (sylvie/gr-wrapper #'evil-window-right))
" . 1338) (t 25127 54250 85713 381000)) nil (25145 60238 336830 0) 0 nil])
([nil nil ((1011 . 1012) 907) nil (25145 60238 336829 0) 0 nil])
([nil nil ((1445 . 1446) 1339) nil (25145 60238 336828 0) 0 nil])
([nil nil (("evil-window" . 1418) (1429 . 1437) ("evil-window" . 1314) (1325 . 1333) ("evil-window" . 1208) (1219 . 1227) ("evil-window" . 1102) (t 25128 50162 197661 169000) (1113 . 1121) (t 25128 50162 197661 169000)) nil (25145 60238 336826 0) 0 nil])
([nil nil ((1217 . 1219) ("above" . 1217) (t 25128 50178 642865 427000)) nil (25145 60238 336823 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1019 . 1020) ("
" . -1116) (1011 . 1117) 907 (t 25128 50199 765565 149000)) nil (25145 60238 336822 0) 0 nil])
([nil nil ((")" . 1010)) nil (25145 60238 336820 0) 0 nil])
([nil nil ((1045 . 1046) ("-" . 1045)) nil (25145 60238 336819 0) 0 nil])
([nil nil ((1115 . 1116) (t 25128 50902 282874 895000)) nil (25145 60238 336818 0) 0 nil])
([nil nil ((")" . 1115) (t 25128 51479 973227 481000)) nil (25145 60238 336817 0) 0 nil])
([nil nil ((")" . 1114)) nil (25145 60238 336816 0) 0 nil])
([nil nil ((1010 . 1012) (1113 . 1115) (")" . -1113) ("(" . -1114) (")" . 1115) (1114 . 1116) ("(" . -1114) (1114 . 1115) (t 25128 51489 226250 691000)) nil (25145 60238 336815 0) 0 nil])
([nil nil ((")" . 1010)) nil (25145 60238 336813 0) 0 nil])
([nil nil ((1987 . 1988) (t 25128 51495 321968 290000) 1969) nil (25145 60238 336812 0) 0 nil])
([nil nil ((1852 . 1853) 1785) nil (25145 60238 336811 0) 0 nil])
([nil nil ((1931 . 1932) 1854) nil (25145 60238 336810 0) 0 nil])
([nil nil ((1970 . 1987) ("'" . 1970) (1969 . 1971) ("'" . -1969) (1968 . 1970) (1967 . 1968) ("\"" . 1967) (1965 . 1967) (1964 . 1966) ("\"" . -1964) (1963 . 1965) (" " . -1962) 1963 (1951 . 1963) ("t" . -1951) (" " . -1952) 1953 (1950 . 1953) ("o" . -1950) 1951 (1947 . 1951) (1946 . 1948) ("\"" . -1946) (1940 . 1947) (1932 . 1940) (1931 . 1932) 1854) nil (25145 60238 336807 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 701 . 702) ("
" . -753) (693 . 754) 642 (t 25128 61387 794711 684000)) nil (25145 60238 336801 0) 0 nil])
([nil nil (("projectile-switch-project" . 728) 752) nil (25145 60238 336799 0) 0 nil])
([nil nil ((733 . 749) ("_" . -733) 734 (728 . 734)) nil (25145 60238 336798 0) 0 nil])
([nil nil (("
" . -805) (749 . 806) 748) nil (25145 60238 336796 0) 0 nil])
([nil nil (("branch-checkout" . 790) 804) nil (25145 60238 336795 0) 0 nil])
([nil nil ((790 . 795)) nil (25145 60238 336794 0) 0 nil])
([nil nil ((779 . 780) ("l" . 779)) nil (25145 60238 336793 0) 0 nil])
([nil nil ((723 . 724) ("l" . 723)) nil (25145 60238 336792 0) 0 nil])
([nil nil (("open layout" . 709) 719 (t 25135 31018 290958 230000)) nil (25145 60238 336791 0) 0 nil])
([nil nil ((713 . 715) (709 . 713) ("G" . -709) 710 (709 . 710)) nil (25145 60238 336789 0) 0 nil])
([nil nil ((709 . 718)) nil (25145 60238 336788 0) 0 nil])
([nil nil (("open layout" . 769) 779) nil (25145 60238 336787 0) 0 nil])
([nil nil ((769 . 774)) nil (25145 60238 336786 0) 0 nil])
([nil nil ((2473 . 2474) ("4" . 2473) (t 25135 31030 201668 909000)) nil (25145 60238 336785 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5646 . 5647) (nil fontified nil 5624 . 5647) (5624 . 5647) (5620 . 5624) (5619 . 5620) (5618 . 5619) (t 25137 64437 922703 811000) 5595) nil (25145 60238 336783 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2885 . 2886) (#("
" 0 1 (face font-lock-string-face fontified nil ws-butler-chg chg)) . -2943) (2879 . 2944) 2810 (t 25145 59273 563485 165000)) nil (25145 60238 336781 0) 0 nil])
([nil nil ((2880 . 2881) 2886) nil (25145 60238 336780 0) 0 nil])
([nil nil ((#("Add layout keybindings" 0 22 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2890) (undo-tree-id37 . -21) (undo-tree-id38 . -21) (undo-tree-id39 . -21) (undo-tree-id40 . -21) 2911) nil (25145 60238 336778 0) 0 nil])
([nil nil ((2934 . 2938) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2934) (undo-tree-id32 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2935) (undo-tree-id33 . -1) 2936 (2935 . 2936) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2935) (undo-tree-id34 . -1) 2936 (2935 . 2936) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2935) (undo-tree-id35 . -1) 2936 (2933 . 2936) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2933) (undo-tree-id36 . -1) 2934 (2933 . 2934) (2912 . 2933) (2911 . 2912) (2890 . 2911)) nil (25145 60238 336772 0) 0 nil])
([nil nil ((2956 . 2957) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 2956)) nil (25145 60238 336763 0) 0 nil])
([nil nil ((2956 . 2957) (#("U" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2956)) nil (25145 60238 336762 0) 0 nil])
([nil nil ((#("      ;; Remap universal argument so I can bind undo-tree
" 0 5 (fontified t ws-butler-chg chg face font-lock-string-face) 5 6 (fontified t ws-butler-chg chg rear-nonsticky t face font-lock-string-face) 6 57 (fontified t ws-butler-chg chg face font-lock-string-face) 57 58 (fontified t ws-butler-chg delete face font-lock-string-face)) . 2881) (undo-tree-id24 . -15) (undo-tree-id25 . 1) (undo-tree-id26 . -35) (undo-tree-id27 . -15) (undo-tree-id28 . 22) (undo-tree-id29 . -15) (undo-tree-id30 . -35) (undo-tree-id31 . -58) 2916) nil (25145 60238 336760 0) 0 nil])
([nil nil ((2898 . 2903) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2898) (undo-tree-id21 . -1) 2899 (2888 . 2899) (2887 . 2888) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2887) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2888) (undo-tree-id23 . -1) 2889 (2881 . 2889) (2881 . 2882) 2911) nil (25145 60238 336750 0) 0 nil])
([nil nil ((2931 . 2936) (#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -2931) (undo-tree-id20 . -1) 2932 (2927 . 2932) (#("layout" 0 6 (ws-butler-chg chg fontified t face font-lock-string-face)) . 2927)) nil (25145 60238 336743 0) 0 nil])
([nil nil ((2945 . 2946) (2939 . 2945) (2938 . 2939) 2935) nil (25145 60238 336740 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2946 . 2947) (#("
" 0 1 (face font-lock-string-face fontified nil ws-butler-chg chg)) . -2998) (2938 . 2999) 2910) nil (25145 60238 336738 0) 0 nil])
([nil nil ((#("Display workspaces" 0 18 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2954) (undo-tree-id16 . -17) (undo-tree-id17 . -17) (undo-tree-id18 . -17) (undo-tree-id19 . -17) 2971) nil (25145 60238 336736 0) 0 nil])
([nil nil ((2954 . 2970) (#("E" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2954) (undo-tree-id15 . -1) 2955 (2954 . 2955)) nil (25145 60238 336730 0) 0 nil])
([nil nil ((2956 . 2963) (#("z" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2956) (undo-tree-id8 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2957) (undo-tree-id9 . -1) 2958 (2956 . 2958) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2956) (undo-tree-id10 . -1) 2957 (2954 . 2957) (#("V" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2954) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2955) (undo-tree-id12 . -1) 2956 (#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2956) (undo-tree-id13 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2957) (undo-tree-id14 . -1) 2958 (2954 . 2958) (#("Enable" 0 6 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2954)) nil (25145 60238 336725 0) 0 nil])
([nil nil ((#("+workspace/display" 0 18 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2981) (undo-tree-id3 . -17) (undo-tree-id4 . -17) (undo-tree-id5 . -18) (undo-tree-id6 . -17) (undo-tree-id7 . -17) 2998) nil (25145 60238 336713 0) 0 nil])
([nil nil ((2985 . 3000) (#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2985) (undo-tree-id1 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2986) (undo-tree-id2 . -1) 2987 (2981 . 2987)) nil (25145 60245 569461 0) 0 nil])
([nil nil ((2976 . 2977) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 2976)) ((2976 . 2977) (#("v" 0 1 (fontified t face font-lock-string-face)) . 2976) (t 25145 60238 341460 143000)) (25145 60258 679 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-string-face fontified nil ws-butler-chg chg)) . -3062) (3000 . 3063) 2945 (t 25145 60238 341460 143000)) nil (25145 60347 542079 0) 0 nil])
([nil nil ((#("visualize" 0 9 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3016) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -9) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) 3024) nil (25145 60347 542076 0) 0 nil])
([nil nil ((3016 . 3020)) nil (25145 60347 542044 0) 0 nil])
([nil nil ((3030 . 3038)) nil (25145 60347 542043 0) 0 nil])
([nil nil ((3041 . 3042) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3041)) nil (25145 60347 542042 0) 0 nil])
([nil nil ((3056 . 3060) (#("visualize" 0 9 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3056) (undo-tree-id50 . -9)) nil (25145 60347 542040 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg face font-lock-string-face fontified nil)) . -3120) (3060 . 3121) 3059) nil (25145 60347 542038 0) 0 nil])
([nil nil ((3076 . 3080) (#("save" 0 4 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3076) (undo-tree-id41 . 3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3)) nil (25145 60347 542035 0) 0 nil])
([nil nil ((3101 . 3102) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3101)) nil (25145 60347 542012 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-string-face fontified nil ws-butler-chg chg)) . -3180) (3120 . 3181) 3101 (t 25145 60347 547149 827000)) nil (25145 60409 285805 0) 0 nil])
([nil nil ((#("load undo-tree history" 0 4 (ws-butler-chg chg fontified t face font-lock-string-face) 4 5 (ws-butler-chg chg fontified t face font-lock-string-face) 5 22 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3136) (undo-tree-id771 . -21) (undo-tree-id772 . -21) (undo-tree-id773 . -21) (undo-tree-id774 . -22) (undo-tree-id775 . -21) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (undo-tree-id783 . -8) (undo-tree-id784 . -3) (undo-tree-id785 . -8) (undo-tree-id786 . -8) (undo-tree-id787 . -8) (undo-tree-id788 . -8) (undo-tree-id789 . -8) (undo-tree-id790 . -8) (undo-tree-id791 . -9) (undo-tree-id792 . -8) (undo-tree-id793 . -9) (undo-tree-id794 . -9) (undo-tree-id795 . -9) (undo-tree-id796 . -9) (undo-tree-id797 . -9) (undo-tree-id798 . -9) (undo-tree-id799 . -13) (undo-tree-id800 . -9) (undo-tree-id801 . -13) (undo-tree-id802 . -13) (undo-tree-id803 . -13) (undo-tree-id804 . -13) (undo-tree-id805 . -13) (undo-tree-id806 . -13) (undo-tree-id807 . -21) (undo-tree-id808 . -13) (undo-tree-id809 . -21) (undo-tree-id810 . -21) (undo-tree-id811 . -21) (undo-tree-id812 . -21) (undo-tree-id813 . -21) (undo-tree-id814 . -21) (undo-tree-id815 . -22) (undo-tree-id816 . -21) (undo-tree-id817 . -22) (undo-tree-id818 . -22) (undo-tree-id819 . -22) (undo-tree-id820 . -22) (undo-tree-id821 . -22) (undo-tree-id822 . -22) (undo-tree-id823 . -21) (undo-tree-id824 . -22) (undo-tree-id825 . -21) (undo-tree-id826 . -21) (undo-tree-id827 . -21) (undo-tree-id828 . -21) (undo-tree-id829 . -21) (undo-tree-id830 . -21) (undo-tree-id831 . -21) 3157) nil (25145 60409 285801 0) 0 nil])
([nil nil ((3136 . 3154)) nil (25145 60409 285736 0) 0 nil])
([nil nil ((3157 . 3158) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3157)) nil (25145 60409 285735 0) 0 nil])
([nil nil (3157) nil (25145 60409 285734 0) 0 nil])
([nil nil ((3136 . 3137) (#("U" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3136) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1)) nil (25145 60409 285732 0) 0 nil])
([nil nil ((#("do-tree-" 0 8 (ws-butler-chg chg fontified t face font-lock-string-face)) . 3164) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (undo-tree-id729 . -8) (undo-tree-id730 . -7) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -2) (undo-tree-id739 . -1) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -2) (undo-tree-id746 . -6) (undo-tree-id747 . -2) (undo-tree-id748 . -6) (undo-tree-id749 . -6) (undo-tree-id750 . -6) (undo-tree-id751 . -6) (undo-tree-id752 . -6) (undo-tree-id753 . -6) (undo-tree-id754 . -7) (undo-tree-id755 . -6) (undo-tree-id756 . -7) (undo-tree-id757 . -7) (undo-tree-id758 . -7) (undo-tree-id759 . -7) (undo-tree-id760 . -7) (undo-tree-id761 . -7) (undo-tree-id762 . -7) 3171) nil (25145 60409 285708 0) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 3164) (undo-tree-id725 . 1)) nil (25145 60409 285667 0) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 3164) (undo-tree-id724 . 1)) nil (25145 60409 285665 0) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 3164) (undo-tree-id723 . 1)) nil (25145 60409 285662 0) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 3164) (undo-tree-id721 . 1) (undo-tree-id722 . -1)) nil (25145 60409 285659 0) 0 nil])
([nil nil ((3171 . 3180) (#("_" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3171) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 3172 (3170 . 3172) (3164 . 3170) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3164) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3165) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3166) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3167) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3168) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3169) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3170) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -3171) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 3172 (3164 . 3172)) nil (25145 60409 285629 0) 0 nil])
([nil current ((#("
    (global-undo-tree-mode)
" 0 1 (fontified t face font-lock-string-face) 1 5 (fontified t face font-lock-string-face) 5 27 (fontified t face font-lock-string-face) 27 28 (rear-nonsticky t fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face)) . 5928) (undo-tree-id832 . -6) (undo-tree-id833 . -27) (undo-tree-id834 . -29) (undo-tree-id835 . -27) (undo-tree-id836 . -27) (undo-tree-id837 . -27) (undo-tree-id838 . -27) (undo-tree-id839 . -27) (undo-tree-id840 . -27) (undo-tree-id841 . -27) (undo-tree-id842 . -27) (undo-tree-id843 . -27) (undo-tree-id844 . -27) (undo-tree-id845 . -27) (undo-tree-id846 . -27) (undo-tree-id847 . -27) (undo-tree-id848 . -27) (undo-tree-id849 . -27) (undo-tree-id850 . -27) (undo-tree-id851 . -27) (undo-tree-id852 . -27) (undo-tree-id853 . -27) (undo-tree-id854 . -27) (undo-tree-id855 . -27) (undo-tree-id856 . -27) (undo-tree-id857 . -5) (undo-tree-id858 . -27) (undo-tree-id859 . -27) (undo-tree-id860 . -27) (undo-tree-id861 . -27) (undo-tree-id862 . -6) (undo-tree-id863 . -27) (undo-tree-id864 . -27) (undo-tree-id865 . -1) (undo-tree-id866 . -29) (undo-tree-id867 . -6) (undo-tree-id868 . -12) (undo-tree-id869 . -6) (undo-tree-id870 . -6) (undo-tree-id871 . -6) (undo-tree-id872 . -6) (undo-tree-id873 . -6) (undo-tree-id874 . -6) (undo-tree-id875 . -6) (undo-tree-id876 . -6) (undo-tree-id877 . -6) (undo-tree-id878 . -6) (undo-tree-id879 . -6) (undo-tree-id880 . -6) (undo-tree-id881 . -6) (undo-tree-id882 . -6) (undo-tree-id883 . -6) (undo-tree-id884 . -6) (undo-tree-id885 . -6) (undo-tree-id886 . -6) (undo-tree-id887 . -6) (undo-tree-id888 . -6) (undo-tree-id889 . -6) (undo-tree-id890 . -6) (undo-tree-id891 . -6) (undo-tree-id892 . -6) (undo-tree-id893 . -6) (undo-tree-id894 . -6) (undo-tree-id895 . -6) (undo-tree-id896 . -6) (undo-tree-id897 . -6) (undo-tree-id898 . -6) (undo-tree-id899 . -6) (undo-tree-id900 . -6) (undo-tree-id901 . -6) (undo-tree-id902 . -6) (undo-tree-id903 . -6) (undo-tree-id904 . -6) (undo-tree-id905 . -6) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -29) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (t 25145 60409 292579 481000)) nil (25145 60438 287657 0) 0 nil])
nil
